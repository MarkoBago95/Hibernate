package main;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import org.hibernate.Query;
import org.hibernate.Session;
import org.hibernate.Transaction;

public class Interface extends javax.swing.JFrame {

    public int izbor2;
    public int izbor;
    SwingWorker sw;

    public Interface() {
        this.setTitle("Zaposleni");
        this.setLocation(10, 10);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        unos = new javax.swing.JRadioButton();
        uredi = new javax.swing.JRadioButton();
        brisanje = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        ime = new javax.swing.JTextField();
        godine = new javax.swing.JTextField();
        adresa = new javax.swing.JTextField();
        dohodak = new javax.swing.JTextField();
        idLabel = new javax.swing.JLabel();
        imeLabel = new javax.swing.JLabel();
        godineLabel = new javax.swing.JLabel();
        adresaLabel = new javax.swing.JLabel();
        dohodakLabel = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        traziRadio = new javax.swing.JRadioButton();
        jSeparator1 = new javax.swing.JSeparator();
        poImenu = new javax.swing.JRadioButton();
        poGodinama = new javax.swing.JRadioButton();
        poAdresi = new javax.swing.JRadioButton();
        poDohotku = new javax.swing.JRadioButton();
        prikaziSve = new javax.swing.JRadioButton();
        prikaziSveTas = new javax.swing.JButton();
        unesiLabel = new javax.swing.JLabel();
        urediLabel = new javax.swing.JLabel();
        brisiLabel = new javax.swing.JLabel();
        poImenuField = new javax.swing.JTextField();
        poGodinamaField = new javax.swing.JTextField();
        poAdresiField = new javax.swing.JTextField();
        poDohotkuField = new javax.swing.JTextField();
        traziLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rezultat = new javax.swing.JTextArea();
        poGodinamaDo = new javax.swing.JTextField();
        odGod = new javax.swing.JLabel();
        doGod = new javax.swing.JLabel();
        poDohotkuDo = new javax.swing.JTextField();
        odDoh = new javax.swing.JLabel();
        doDoh = new javax.swing.JLabel();
        sveLabel = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        trazi = new javax.swing.JButton();
        urediTas = new javax.swing.JButton();
        obrisiTas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        buttonGroup1.add(unos);
        unos.setText("Unesi novog zaposlenog");
        unos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unosActionPerformed(evt);
            }
        });

        buttonGroup1.add(uredi);
        uredi.setText("Uredi podatke zaposlenog");
        uredi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                urediActionPerformed(evt);
            }
        });

        buttonGroup1.add(brisanje);
        brisanje.setText("Brisanje zaposlenog");
        brisanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brisanjeActionPerformed(evt);
            }
        });

        jLabel1.setText("Odaberi opciju");

        idLabel.setText("id");

        imeLabel.setText("ime");

        godineLabel.setText("godine");

        adresaLabel.setText("adresa");

        dohodakLabel.setText("dohodak");

        submit.setText("Unesi novog");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        buttonGroup1.add(traziRadio);
        traziRadio.setText("Traži zaposlenog");
        traziRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                traziRadioActionPerformed(evt);
            }
        });

        buttonGroup2.add(poImenu);
        poImenu.setText("po imenu");
        poImenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poImenuActionPerformed(evt);
            }
        });

        buttonGroup2.add(poGodinama);
        poGodinama.setText("po godinama");
        poGodinama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poGodinamaActionPerformed(evt);
            }
        });

        buttonGroup2.add(poAdresi);
        poAdresi.setText("po adresi");
        poAdresi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poAdresiActionPerformed(evt);
            }
        });

        buttonGroup2.add(poDohotku);
        poDohotku.setText("po dohotku");
        poDohotku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                poDohotkuActionPerformed(evt);
            }
        });

        buttonGroup1.add(prikaziSve);
        prikaziSve.setText("Prikaži sve zaposlene");
        prikaziSve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prikaziSveActionPerformed(evt);
            }
        });

        prikaziSveTas.setText("Prikaži sve zaposlene");
        prikaziSveTas.setMaximumSize(new java.awt.Dimension(133, 24));
        prikaziSveTas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        unesiLabel.setText("Unesite sve podatke za zaposlenog ");

        urediLabel.setText("Unesite id zaposlenog i polja koje želite urediti");

        brisiLabel.setText("Unesite id zaposlenog kojeg želite obrisati");

        poGodinamaField.setToolTipText("od godine");

        traziLabel.setText("Odaberite podopciju, unesite vrednosti u polja i pritisnite taster Traži");

        rezultat.setColumns(20);
        rezultat.setRows(5);
        jScrollPane1.setViewportView(rezultat);

        poGodinamaDo.setToolTipText("do godine");

        odGod.setText("od");

        doGod.setText("do");

        odDoh.setText("od");

        doDoh.setText("do");

        sveLabel.setText("Odaberite opciju i pritisnite taster Prikaži sve zaposlene");

        trazi.setText("Traži");
        trazi.setMaximumSize(new java.awt.Dimension(55, 24));
        trazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        urediTas.setText("Uredi");
        urediTas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        obrisiTas.setText("Obriši zaposlenog");
        obrisiTas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(prikaziSve)
                        .addGap(48, 48, 48)
                        .addComponent(sveLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(prikaziSveTas, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 934, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(poImenu)
                            .addComponent(poAdresi)
                            .addComponent(poDohotku)
                            .addComponent(poGodinama))
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(odGod)
                                    .addComponent(odDoh))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(poImenuField, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(poGodinamaField, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(doGod)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(poGodinamaDo, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(poAdresiField, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(poDohotkuField, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(doDoh)
                                        .addGap(18, 18, 18)
                                        .addComponent(poDohotkuDo, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(161, 161, 161)
                                        .addComponent(trazi, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(traziLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addComponent(imeLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ime, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(godine, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(godineLabel))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(adresa, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(235, 235, 235)
                                        .addComponent(adresaLabel)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(dohodakLabel))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(dohodak, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jScrollPane1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(unos)
                                            .addComponent(uredi))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(unesiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(urediLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(brisiLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(obrisiTas, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(urediTas, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(submit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(traziRadio)
                            .addComponent(brisanje))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(unos)
                            .addComponent(unesiLabel)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(submit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uredi)
                    .addComponent(urediLabel)
                    .addComponent(urediTas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(brisanje)
                        .addComponent(brisiLabel))
                    .addComponent(obrisiTas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idLabel)
                    .addComponent(imeLabel)
                    .addComponent(godineLabel)
                    .addComponent(adresaLabel)
                    .addComponent(dohodakLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(godine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(adresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dohodak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(traziRadio)
                    .addComponent(traziLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(poImenu)
                    .addComponent(poImenuField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(poGodinama)
                    .addComponent(odGod)
                    .addComponent(poGodinamaField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(doGod)
                    .addComponent(poGodinamaDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(poAdresi)
                    .addComponent(poAdresiField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(poDohotku)
                            .addComponent(poDohotkuField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(odDoh)
                            .addComponent(doDoh)
                            .addComponent(poDohotkuDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(trazi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prikaziSve)
                    .addComponent(sveLabel)
                    .addComponent(prikaziSveTas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void unosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unosActionPerformed
        izbor = 1;
        prikaziSveTas.setEnabled(false);
        trazi.setEnabled(false);
        submit.setEnabled(true);
        urediTas.setEnabled(false);
        obrisiTas.setEnabled(false);
        poAdresi.setEnabled(false);
        poImenu.setEnabled(false);
        poGodinama.setEnabled(false);
        poDohotku.setEnabled(false);
        poImenuField.setEditable(false);
        poGodinamaField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poAdresiField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
        id.setEditable(false);
        ime.setEditable(true);
        godine.setEditable(true);
        adresa.setEditable(true);
        dohodak.setEditable(true);
        unesiLabel.setEnabled(true);
        urediLabel.setEnabled(false);
        brisiLabel.setEnabled(false);
        traziLabel.setEnabled(false);
        sveLabel.setEnabled(false);
        idLabel.setEnabled(false);
        imeLabel.setEnabled(true);
        godineLabel.setEnabled(true);
        adresaLabel.setEnabled(true);
        dohodakLabel.setEnabled(true);
        odGod.setEnabled(false);
        doGod.setEnabled(false);
        odDoh.setEnabled(false);
        doDoh.setEnabled(false);
        poAdresiField.setEditable(false);
        poImenuField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
    }//GEN-LAST:event_unosActionPerformed

    private void urediActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_urediActionPerformed
        izbor = 2;
        prikaziSveTas.setEnabled(false);
        trazi.setEnabled(false);
        submit.setEnabled(false);
        urediTas.setEnabled(true);
        obrisiTas.setEnabled(false);
        poAdresi.setEnabled(false);
        poImenu.setEnabled(false);
        poGodinama.setEnabled(false);
        poDohotku.setEnabled(false);
        poImenuField.setEditable(false);
        poGodinamaField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poAdresiField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
        id.setEditable(true);
        ime.setEditable(true);
        godine.setEditable(true);
        adresa.setEditable(true);
        dohodak.setEditable(true);
        unesiLabel.setEnabled(false);
        urediLabel.setEnabled(true);
        brisiLabel.setEnabled(false);
        traziLabel.setEnabled(false);
        sveLabel.setEnabled(false);
        idLabel.setEnabled(true);
        imeLabel.setEnabled(true);
        godineLabel.setEnabled(true);
        adresaLabel.setEnabled(true);
        dohodakLabel.setEnabled(true);
        odGod.setEnabled(false);
        doGod.setEnabled(false);
        odDoh.setEnabled(false);
        doDoh.setEnabled(false);
        poAdresiField.setEditable(false);
        poImenuField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
    }//GEN-LAST:event_urediActionPerformed

    private void brisanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brisanjeActionPerformed
        izbor = 3;
        prikaziSveTas.setEnabled(false);
        trazi.setEnabled(false);
        submit.setEnabled(false);
        urediTas.setEnabled(false);
        obrisiTas.setEnabled(true);
        poAdresi.setEnabled(false);
        poImenu.setEnabled(false);
        poGodinama.setEnabled(false);
        poDohotku.setEnabled(false);
        poImenuField.setEditable(false);
        poGodinamaField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poAdresiField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
        id.setEditable(true);
        ime.setEditable(false);
        godine.setEditable(false);
        adresa.setEditable(false);
        dohodak.setEditable(false);
        unesiLabel.setEnabled(false);
        urediLabel.setEnabled(false);
        brisiLabel.setEnabled(true);
        traziLabel.setEnabled(false);
        sveLabel.setEnabled(false);
        idLabel.setEnabled(true);
        imeLabel.setEnabled(false);
        godineLabel.setEnabled(false);
        adresaLabel.setEnabled(false);
        dohodakLabel.setEnabled(false);
        odGod.setEnabled(false);
        doGod.setEnabled(false);
        odDoh.setEnabled(false);
        doDoh.setEnabled(false);
        poAdresiField.setEditable(false);
        poImenuField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);

    }//GEN-LAST:event_brisanjeActionPerformed

    private void traziRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_traziRadioActionPerformed
        izbor = 4;
        prikaziSveTas.setEnabled(false);
        trazi.setEnabled(true);
        submit.setEnabled(false);
        urediTas.setEnabled(false);
        obrisiTas.setEnabled(false);
        poAdresi.setEnabled(true);
        poImenu.setEnabled(true);
        poGodinama.setEnabled(true);
        poDohotku.setEnabled(true);
        poImenuField.setEditable(true);
        poGodinamaField.setEditable(true);
        poGodinamaDo.setEditable(true);
        poGodinamaField.setEditable(true);
        poAdresiField.setEditable(true);
        poDohotkuField.setEditable(true);
        poDohotkuDo.setEditable(true);
        id.setEditable(false);
        ime.setEditable(false);
        godine.setEditable(false);
        adresa.setEditable(false);
        dohodak.setEditable(false);
        unesiLabel.setEnabled(false);
        urediLabel.setEnabled(false);
        brisiLabel.setEnabled(false);
        traziLabel.setEnabled(true);
        sveLabel.setEnabled(false);
        idLabel.setEnabled(false);
        imeLabel.setEnabled(false);
        godineLabel.setEnabled(false);
        adresaLabel.setEnabled(false);
        dohodakLabel.setEnabled(false);
        odGod.setEnabled(true);
        doGod.setEnabled(true);
        odDoh.setEnabled(true);
        doDoh.setEnabled(true);
        poAdresiField.setEditable(true);
        poImenuField.setEditable(true);
        poGodinamaDo.setEditable(true);
        poGodinamaField.setEditable(true);
        poDohotkuField.setEditable(true);
        poDohotkuDo.setEditable(true);
    }//GEN-LAST:event_traziRadioActionPerformed

    private void prikaziSveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prikaziSveActionPerformed
        izbor = 5;
        prikaziSveTas.setEnabled(true);
        trazi.setEnabled(false);
        submit.setEnabled(false);
        urediTas.setEnabled(false);
        obrisiTas.setEnabled(false);
        poAdresi.setEnabled(false);
        poImenu.setEnabled(false);
        poGodinama.setEnabled(false);
        poDohotku.setEnabled(false);
        poImenuField.setEditable(false);
        poGodinamaField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poAdresiField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
        id.setEditable(false);
        ime.setEditable(false);
        godine.setEditable(false);
        adresa.setEditable(false);
        dohodak.setEditable(false);
        unesiLabel.setEnabled(false);
        urediLabel.setEnabled(false);
        brisiLabel.setEnabled(false);
        traziLabel.setEnabled(false);
        sveLabel.setEnabled(true);
        idLabel.setEnabled(false);
        imeLabel.setEnabled(false);
        godineLabel.setEnabled(false);
        adresaLabel.setEnabled(false);
        dohodakLabel.setEnabled(false);
        odGod.setEnabled(false);
        doGod.setEnabled(false);
        odDoh.setEnabled(false);
        doDoh.setEnabled(false);
        poAdresiField.setEditable(false);
        poImenuField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
    }//GEN-LAST:event_prikaziSveActionPerformed

    private void poImenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poImenuActionPerformed
        izbor2 = 1;
        
        odGod.setEnabled(false);
        doGod.setEnabled(false);
        odDoh.setEnabled(false);
        doDoh.setEnabled(false);
        poAdresiField.setEditable(false);
        poImenuField.setEditable(true);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
    }//GEN-LAST:event_poImenuActionPerformed

    private void poGodinamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poGodinamaActionPerformed
        izbor2 = 2;
        odGod.setEnabled(true);
        doGod.setEnabled(true);
        odDoh.setEnabled(false);
        doDoh.setEnabled(false);
        poAdresiField.setEditable(false);
        poImenuField.setEditable(false);
        poGodinamaDo.setEditable(true);
        poGodinamaField.setEditable(true);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
    }//GEN-LAST:event_poGodinamaActionPerformed

    private void poAdresiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poAdresiActionPerformed
        izbor2 = 3;
        odGod.setEnabled(false);
        doGod.setEnabled(false);
        odDoh.setEnabled(false);
        doDoh.setEnabled(false);
        poAdresiField.setEditable(true);
        poImenuField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poDohotkuField.setEditable(false);
        poDohotkuDo.setEditable(false);
    }//GEN-LAST:event_poAdresiActionPerformed

    private void poDohotkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_poDohotkuActionPerformed
        izbor2 = 4;
        odGod.setEnabled(false);
        doGod.setEnabled(false);
        odDoh.setEnabled(true);
        doDoh.setEnabled(true);
        poAdresiField.setEditable(false);
        poImenuField.setEditable(false);
        poGodinamaDo.setEditable(false);
        poGodinamaField.setEditable(false);
        poDohotkuField.setEditable(true);
        poDohotkuDo.setEditable(true);
    }//GEN-LAST:event_poDohotkuActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        sw = new SwingWorker() {
            @Override
            protected Object doInBackground() throws Exception {
                Session session1 = HibernateUtil.createSessionFactory().openSession();
                Transaction tx = null;
                List<Zaposleni> zaposleni = null;

                switch (izbor) {
                    case 1:
                        String imeText = ime.getText();
                        String godineText = godine.getText();
                        String adresaText = adresa.getText();
                        String dohodakText = dohodak.getText();
                        if (!imeText.equals("") && !godineText.equals("") && !adresaText.equals("") && !dohodakText.equals("")) {
                            Zaposleni zaposleni1 = new Zaposleni(ime.getText(), Integer.parseInt(godine.getText()), adresa.getText(), Double.parseDouble(dohodak.getText()));
                            session1.persist(zaposleni1);
                            try {
                                tx = session1.beginTransaction();
                                session1.persist(zaposleni1);
                                tx.commit();
                                JOptionPane.showMessageDialog(null, "Uspješno ste uneli zaposlenog");
                            } catch (Exception e) {
                                System.out.println(e.getMessage());
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Unesite sve podatke za unos novog zaposlenog!");
                        }

                        break;
                    case 2:
                        String idTekst = id.getText();
                        if (!idTekst.equals("")) {
                            Zaposleni zaposleni2 = (Zaposleni) session1.get(Zaposleni.class, Integer.parseInt(id.getText()));
                            if (!ime.getText().equals("")) {
                                zaposleni2.setIme(ime.getText());
                            }
                            if (!godine.getText().equals("")) {
                                zaposleni2.setGodine(Integer.parseInt(godine.getText()));
                            }
                            if (!adresa.getText().equals("")) {
                                zaposleni2.setAdresa(adresa.getText());
                            }
                            if (!dohodak.getText().equals("")) {
                                zaposleni2.setDohodak(Double.parseDouble(dohodak.getText()));
                            }
                            try {
                                tx = session1.beginTransaction();
                                session1.update(zaposleni2);
                                tx.commit();
                                JOptionPane.showMessageDialog(null, "Uspješno ste uredili podatke zaposlenog");
                            } catch (Exception e) {
                                System.out.println(e.getMessage());
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Unesite podatke u polje za id");
                        }
                        break;
                    case 3:
                        String idText2 = id.getText();
                        if (!idText2.equals("")) {
                            Zaposleni zaposleni3 = (Zaposleni) session1.get(Zaposleni.class, Integer.parseInt(id.getText()));
                            try {
                                tx = session1.beginTransaction();
                                session1.delete(zaposleni3);
                                tx.commit();
                                JOptionPane.showMessageDialog(null, "Uspješno izbrisali zaposlenog");
                            } catch (Exception e) {
                                System.out.println(e.getMessage());
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Unesite podatke u polje za id");
                        }
                        break;
                    case 4:
                        switch (izbor2) {
                            case 1:
                                String set = poImenuField.getText();
                                if (!set.equals("")) {
                                    String rez = "";
                                    String hql = "FROM Zaposleni as zaposleni where zaposleni.ime='" + poImenuField.getText() + "'";
                                    Query query = session1.createQuery(hql);
                                    List<Zaposleni> results = query.list();
                                    if (!results.isEmpty()) {
                                        for (Zaposleni result : results) {
                                            rez = rez.concat("Id: " + result.getZaposleniId() + " --- Ime: " + result.getIme() + " --- Godine: " + result
                                                    .getGodine() + " --- Adresa: " + result.getAdresa() + " --- Dohodak: " + result.getDohodak() + "\n");
                                            rezultat.setText(rez);
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Nema rezultata!\nNapomena: unesite puno ime i prezime");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Unesite podatke u polje za ime");
                                }
                                break;
                            case 2:
                                String set2 = poGodinamaField.getText();
                                String set3 = poGodinamaDo.getText();
                                if (!set2.equals("") && !set3.equals("")) {
                                    String rez2 = "";
                                    String hql2 = "FROM Zaposleni as zaposleni where zaposleni.godine >=" + poGodinamaField.getText() + " AND zaposleni.godine <=" + poGodinamaDo.getText();
                                    Query query2 = session1.createQuery(hql2);
                                    List<Zaposleni> results2 = query2.list();
                                    if (!results2.isEmpty()) {
                                        for (Zaposleni result : results2) {
                                            rez2 = rez2.concat("Id: " + result.getZaposleniId() + " --- Ime: " + result.getIme() + " --- Godine: " + result
                                                    .getGodine() + " --- Adresa: " + result.getAdresa() + " --- Dohodak: " + result.getDohodak() + "\n");
                                            rezultat.setText(rez2);

                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Nema rezultata!");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Unesite podatke u polje za godine");
                                }
                                break;
                            case 3:
                                String set4 = poAdresiField.getText();
                                if (!set4.equals("")) {
                                    String rez3 = "";
                                    String hql3 = "FROM Zaposleni as zaposleni where zaposleni.adresa='" + poAdresiField.getText() + "'";
                                    Query query3 = session1.createQuery(hql3);
                                    List<Zaposleni> results3 = query3.list();
                                    if (!results3.isEmpty()) {
                                        for (Zaposleni result : results3) {
                                            rez3 = rez3.concat("Id: " + result.getZaposleniId() + " --- Ime: " + result.getIme() + " --- Godine: " + result
                                                    .getGodine() + " --- Adresa: " + result.getAdresa() + " --- Dohodak: " + result.getDohodak() + "\n");
                                            rezultat.setText(rez3);
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Nema rezultata!");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Unesite podatke u polje za adresu");
                                }
                                break;
                            case 4:
                                String set5 = poDohotkuField.getText();
                                String set6 = poDohotkuDo.getText();
                                if (!set5.equals("") && !set6.equals("")) {
                                    String rez4 = "";
                                    String hql4 = "FROM Zaposleni as zaposleni where zaposleni.dohodak >=" + poDohotkuField.getText() + " AND zaposleni.dohodak <=" + poDohotkuDo.getText();
                                    Query query4 = session1.createQuery(hql4);
                                    List<Zaposleni> results4 = query4.list();
                                    if (!results4.isEmpty()) {
                                        for (Zaposleni result : results4) {
                                            rez4 = rez4.concat("Id: " + result.getZaposleniId() + " --- Ime: " + result.getIme() + " --- Godine: " + result
                                                    .getGodine() + " --- Adresa: " + result.getAdresa() + " --- Dohodak: " + result.getDohodak() + "\n");
                                            rezultat.setText(rez4);
                                        }
                                    } else {
                                        JOptionPane.showMessageDialog(null, "Nema rezultata!");
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "Unesite podatke u polje za dohodak");
                                }
                                break;
                            default:
                                JOptionPane.showMessageDialog(null, "Odaberite opciju po kojemu tražite zaposlenog!");
                        }
                        break;
                    case 5:
                        String rez5 = "";
                        String hql5 = "From Zaposleni";
                        Query query5 = session1.createQuery(hql5);
                        List<Zaposleni> results5 = query5.list();
                        if (!results5.isEmpty()) {
                            for (Zaposleni result : results5) {

                                rez5 = rez5.concat("Id: " + result.getZaposleniId() + " --- Ime: " + result.getIme() + " --- Godine: " + result
                                        .getGodine() + " --- Adresa: " + result.getAdresa() + " --- Dohodak: " + result.getDohodak() + "\n");
                                rezultat.setText(rez5);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Nema rezultata!");
                        }

                        break;
                    default:
                        JOptionPane.showMessageDialog(null, "Odaberite opciju!");

                }
                return null;
            }
        };
        sw.execute();
    }//GEN-LAST:event_submitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adresa;
    private javax.swing.JLabel adresaLabel;
    private javax.swing.JRadioButton brisanje;
    private javax.swing.JLabel brisiLabel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel doDoh;
    private javax.swing.JLabel doGod;
    private javax.swing.JTextField dohodak;
    private javax.swing.JLabel dohodakLabel;
    private javax.swing.JTextField godine;
    private javax.swing.JLabel godineLabel;
    private javax.swing.JTextField id;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField ime;
    private javax.swing.JLabel imeLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton obrisiTas;
    private javax.swing.JLabel odDoh;
    private javax.swing.JLabel odGod;
    private javax.swing.JRadioButton poAdresi;
    private javax.swing.JTextField poAdresiField;
    private javax.swing.JRadioButton poDohotku;
    private javax.swing.JTextField poDohotkuDo;
    private javax.swing.JTextField poDohotkuField;
    private javax.swing.JRadioButton poGodinama;
    private javax.swing.JTextField poGodinamaDo;
    private javax.swing.JTextField poGodinamaField;
    private javax.swing.JRadioButton poImenu;
    private javax.swing.JTextField poImenuField;
    private javax.swing.JRadioButton prikaziSve;
    private javax.swing.JButton prikaziSveTas;
    private javax.swing.JTextArea rezultat;
    private javax.swing.JButton submit;
    private javax.swing.JLabel sveLabel;
    private javax.swing.JButton trazi;
    private javax.swing.JLabel traziLabel;
    private javax.swing.JRadioButton traziRadio;
    private javax.swing.JLabel unesiLabel;
    private javax.swing.JRadioButton unos;
    private javax.swing.JRadioButton uredi;
    private javax.swing.JLabel urediLabel;
    private javax.swing.JButton urediTas;
    // End of variables declaration//GEN-END:variables
}
